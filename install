#!/bin/bash
# install

function echo_err {
    echo -e "\r\033[0;1m\033[41m FAIL \033[0m"
}

function echo_okay {
    echo -e "\r\033[0;1m\033[42m DONE \033[0m"
}

function exists {
    typ=$1
    target=$2
    echo_err
    echo "$typ $target exists and is not already a symlink."
    echo "Either remove or rename it and try again."
}

function symlink {
    src=$1
    target=$2

    echo -n "       Linking $target..."

    # Don't overwrite non-symlinked configs
    if [ -f "$target" ] && [ ! -L "$target" ]; then
        # target exists, is regular file && not a symlink
        exists "file" $target
        return 1
    fi

    # Don't nest symlinks
    if [ -d "$target" ]; then
        # target exists and is a directory
        if [ -L "$target" ]; then
            # target exists and is a symlink
            rm $target
        else
            # not a symlink
            exists "directory" $target
            return 1
        fi
    fi

    ln -fs $(pwd)/$src "$target"
    echo_okay
}

symlink bashrc ~/.bashrc
symlink zshrc ~/.zshrc
symlink bash_profile ~/.bash_profile
symlink git/gitconfig ~/.gitconfig
symlink git/gitignore ~/.gitignore_global
symlink git/gitmessage ~/.gitmessage
symlink init.vim ~/.config/nvim/init.vim
symlink inputrc ~/.inputrc
symlink lein ~/.lein
symlink psqlrc ~/.psqlrc
symlink editrc ~/.editrc
symlink vimrc ~/.vimrc
symlink vimrc ~/.ideavimrc
symlink vim ~/.vim
symlink tmux.conf ~/.tmux.conf
symlink ctags ~/.ctags
symlink vscode/keybindings.json ~/Library/Application\ Support/Code/User/keybindings.json
symlink vscode/settings.json ~/Library/Application\ Support/Code/User/settings.json
